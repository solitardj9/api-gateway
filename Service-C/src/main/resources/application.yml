server:
  port: 19370
      
spring:
  application:
    name: service-a
  main:
    allow-bean-definition-overriding: true
#  cloud:
#    config: 
#      uri: http://127.0.0.1:19671
      
eureka:
  instance:
    instance-id: ${spring.cloud.client.hostname}:${spring.application.name}:${spring.application.instance_id:${server.port}}
#   instance-id: ${spring.cloud.client.ip-address}:${spring.application.name}:${spring.application.instance_id:${server.port}}
  client:
    enabled: true
    serviceUrl:
      defaultZone: ${EUREKA_URL:http://127.0.0.1:19270/eureka/}
      
serviceWorker:
  config: 
    accuWeather:
      composite: '{
								    "name" : "API-ACCU-WEATHER-V1-FORECAST_DAILY_COMPOSITE",
								    "type" : "composite",
								    "sequence" : [
								      "API-ACCU-WEATHER-V1-LOCATION",
								      "API-ACCU-WEATHER-V1-FORECAST_DAILY"
								    ]
								  }'
      singleLocation: '{
											   "name" : "API-ACCU-WEATHER-V1-LOCATION",
											   "type" : "single",
											   "config" : {
											     "scheme" : "https",
											     "host" : "api.accuweather.com" ,
											     "method" : "GET",
											     "requestRule" : [
											       {
											         "condition" : [],
											         "action" : {
											           "path" : "locations/v1/cities/translate.json",
											           "headers" : null,
											             "queryParams" : {
											                 "apiKey" : "",
											                 "language" : "FUNCTION_STRINGFORMAT({1}-{2}, FUNCTION_GET( , headers, x-api-country, 0), FUNCTION_GET( , headers, x-api-language, 0))",
											                 "q" : "FUNCTION_GET( , headers, x-api-city, 0)"
											             },
											           "requestBody" : null
											         }
											       }
											     ],
											     "responseRule" : [
											       {
											         "condition" : ["FUNCTION_TRIGGER(responseStatus, code, 404)"],
											         "responseBody" : {
											           "code" : 404,
											           "message" : "error_message_404"
											         }
											       },
											       {
											         "condition" : ["FUNCTION_TRIGGER(responseStatus, code, 200)"],
											         "responseBody" : {
											           "code" : "FUNCTION_GET( , responseStatus, code)",
											           "message" : "sucess",
											           "ret" : "FUNCTION_GET( , responseBody, $)"
											         }
											       }
											     ]
											   }
											 }'
      singleForecastDaily: '{
														  "name" : "API-ACCU-WEATHER-V1-FORECAST_DAILY",
														  "type" : "single",
														  "config" : {
														    "scheme" : "https",
														    "host" : "api.accuweather.com" ,
														    "method" : "GET",
														    "requestRule" : [
														      {
														        "condition" : [],
														        "action" : {
														          "path" : "FUNCTION_STRINGFORMAT(forecasts/v1/daily/{1}day/{2}, FUNCTION_GET(COMPOSITE, headers, x-api-day, 0), FUNCTION_GET( , requestBody, $.ret[0].Key))",
														          "headers" : null,
														            "queryParams" : {
														                "apiKey" : "",
														                "language" : "FUNCTION_GET(API-ACCU-WEATHER-V1-LOCATION, queryParams, language)",
														                "details" : true,
														                "metric" : true
														            },
														          "requestBody" : null
														        }
														      }
														    ],
														    "responseRule" : [
														      {
														        "condition" : ["FUNCTION_TRIGGER(responseStatus, code, 404)"],
														        "responseBody" : {
														          "code" : 404,
														          "message" : "error_message_404"
														        }
														      },
														      {
														        "condition" : ["FUNCTION_TRIGGER(responseStatus, code, 200)"],
														        "responseBody" : {
														          "code" : "FUNCTION_GET( , responseStatus, code)",
														          "message" : "sucess",
														          "ret" : "FUNCTION_GET( , responseBody, $)"
														        }
														      }
														    ]
														  }
														}'
  
  